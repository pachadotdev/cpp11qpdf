[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"/LICENSE.html","id":"1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"/LICENSE.html","id":"2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"/LICENSE.html","id":"3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"/LICENSE.html","id":"4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"/LICENSE.html","id":"5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"/LICENSE.html","id":"6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"/LICENSE.html","id":"7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"/LICENSE.html","id":"8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"/LICENSE.html","id":"9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"/articles/cpp11qpdf.html","id":"load-the-package-and-example-file","dir":"Articles","previous_headings":"","what":"Load the package and example file","title":"Basic Usage of cpp11qpdf","text":"Load cpp11qpdf package set path example PDF file included R demonstration purposes.","code":"library(cpp11qpdf) input_pdf <- system.file(\"examples\", \"sufganiyot.pdf\", package = \"cpp11qpdf\")"},{"path":"/articles/cpp11qpdf.html","id":"compressing-a-pdf","dir":"Articles","previous_headings":"","what":"Compressing a PDF","title":"Basic Usage of cpp11qpdf","text":"compress PDF file, use pdf_compress function. function takes input PDF file output file path.","code":"output_pdf <- tempfile(fileext = \".pdf\") pdf_compress(input_pdf, output_pdf, password = \"\") #> [1] \"/tmp/RtmpEqR14K/file78f1b7a44b60b.pdf\" file.exists(output_pdf) #> [1] TRUE"},{"path":"/articles/cpp11qpdf.html","id":"rotating-pages-in-a-pdf","dir":"Articles","previous_headings":"","what":"Rotating Pages in a PDF","title":"Basic Usage of cpp11qpdf","text":"rotate pages PDF, use pdf_rotate_pages function. function takes input PDF file, pages rotate, angle rotation, output file path.","code":"output_pdf <- tempfile(fileext = \".pdf\") pdf_rotate_pages(input_pdf, pages = 1, angle = 90, output = output_pdf,   password = \"\") #> [1] \"/tmp/RtmpEqR14K/file78f1b700623ab.pdf\" file.exists(output_pdf) #> [1] TRUE"},{"path":"/articles/cpp11qpdf.html","id":"splitting-a-pdf","dir":"Articles","previous_headings":"","what":"Splitting a PDF","title":"Basic Usage of cpp11qpdf","text":"split PDF individual pages, use pdf_split function. function takes input PDF file output file prefix.","code":"output_prefix <- tempfile() output_files <- pdf_split(input_pdf, output_prefix, password = \"\") output_files #> [1] \"/tmp/RtmpEqR14K/file78f1b61646c0c_1.pdf\""},{"path":"/articles/cpp11qpdf.html","id":"combining-multiple-pdfs","dir":"Articles","previous_headings":"","what":"Combining Multiple PDFs","title":"Basic Usage of cpp11qpdf","text":"combine multiple PDF files single PDF, use pdf_combine function. function takes vector input PDF files output file path.","code":"# using the output files from the previous example output_pdf <- tempfile(fileext = \".pdf\") pdf_combine(output_files, output_pdf, password = \"\") #> [1] \"/tmp/RtmpEqR14K/file78f1b29103767.pdf\" file.exists(output_pdf) #> [1] TRUE"},{"path":"/articles/cpp11qpdf.html","id":"extracting-pages-from-a-pdf","dir":"Articles","previous_headings":"","what":"Extracting Pages from a PDF","title":"Basic Usage of cpp11qpdf","text":"extract specific pages PDF, use pdf_subset function. function takes input PDF file, pages extract, output file path.","code":"output_pdf <- tempfile(fileext = \".pdf\") pdf_subset(input_pdf, 1, output_pdf, password = \"\") #> [1] \"/tmp/RtmpEqR14K/file78f1b33109ca8.pdf\" file.exists(output_pdf) #> [1] TRUE"},{"path":"/articles/cpp11qpdf.html","id":"overlaying-a-stamp-on-a-pdf","dir":"Articles","previous_headings":"","what":"Overlaying a Stamp on a PDF","title":"Basic Usage of cpp11qpdf","text":"overlay stamp page PDF, use pdf_overlay_stamp function. function takes input PDF file, stamp PDF file, output file path. Now pages header part original PDF.","code":"stamp_pdf <- system.file(\"examples\", \"header.pdf\", package = \"cpp11qpdf\") output_pdf <- tempfile(fileext = \".pdf\") pdf_overlay_stamp(input_pdf, stamp_pdf, output_pdf, password = \"\") #> [1] \"/tmp/RtmpEqR14K/file78f1b50b7d400.pdf\" file.exists(output_pdf) #> [1] TRUE"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeroen Ooms. Author. Mauricio Vargas Sepulveda. Author, maintainer. Ben Raymond. Contributor. Jay Berkenbilt. Copyright holder.           Author libcpp11qpdf Munk School Global Affairs Public Policy. Funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ooms J, Vargas Sepulveda M (2024). cpp11qpdf: Split, Combine Compress PDF Files. R package version 0.1.0, https://pacha.dev/cpp11qpdf.","code":"@Manual{,   title = {cpp11qpdf: Split, Combine and Compress PDF Files},   author = {Jeroen Ooms and Mauricio {Vargas Sepulveda}},   year = {2024},   note = {R package version 0.1.0},   url = {https://pacha.dev/cpp11qpdf}, }"},{"path":[]},{"path":"/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Split, Combine and Compress PDF Files","text":"cpp11qpdf package provides set functions manipulate PDF files using qpdf library.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Split, Combine and Compress PDF Files","text":"can install development version cpp11qpdf like :","code":"remotes::install_github(\"pachadotdev/cpp11qpdf\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Split, Combine and Compress PDF Files","text":"See vignette examples.","code":"tmpdir <- tempdir() library(cpp11qpdf) file <- file.path(Sys.getenv(\"R_DOC_DIR\"), \"NEWS.pdf\") pdf_compress(file, file.path(tmpdir, \"output.pdf\")) #> [1] \"/tmp/RtmpKQn8yl/output.pdf\""},{"path":"/reference/cpp11qpdf-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Split, Combine and Compress PDF Files — cpp11qpdf-package","title":"Split, Combine and Compress PDF Files — cpp11qpdf-package","text":"Bindings 'cpp11qpdf': tool content-preserving transformations PDF files  split, combine, compress.","code":""},{"path":[]},{"path":"/reference/cpp11qpdf-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split, Combine and Compress PDF Files — cpp11qpdf-package","text":"Maintainer: Mauricio Vargas Sepulveda m.sepulveda@mail.utoronto.ca (ORCID) Authors: Jeroen Ooms jeroen@berkeley.edu (ORCID) contributors: Ben Raymond [contributor] Jay Berkenbilt (Author libcpp11qpdf) [copyright holder] Munk School Global Affairs Public Policy [funder]","code":""},{"path":"/reference/cpp11qpdf.html","id":null,"dir":"Reference","previous_headings":"","what":"PDF Functions — cpp11qpdf","title":"PDF Functions — cpp11qpdf","text":"PDF Functions","code":""},{"path":"/reference/cpp11qpdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PDF Functions — cpp11qpdf","text":"","code":"pdf_split(input, output = NULL, password = askpass::askpass())  pdf_length(input, password = askpass::askpass())  pdf_subset(input, pages = 1, output = NULL, password = askpass::askpass())  pdf_combine(input, output = NULL, password = askpass::askpass())  pdf_compress(   input,   output = NULL,   linearize = FALSE,   password = askpass::askpass() )  pdf_overlay_stamp(input, stamp, output = NULL, password = askpass::askpass())  pdf_rotate_pages(   input,   pages,   angle = 90,   relative = FALSE,   output = NULL,   password = askpass::askpass() )"},{"path":"/reference/cpp11qpdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PDF Functions — cpp11qpdf","text":"input path url input pdf file output base path output file(s) password string password open pdf file pages vector page numbers rotate linearize enable pdf linearization (streamable pdf) stamp pdf file first page overlayed page input angle rotation angle degrees (positive = clockwise) relative TRUE, pages rotated relative current orientation. FALSE, rotation absolute (0 = portrait, 90 = landscape, rotated 90 degrees clockwise portrait)","code":""},{"path":"/reference/cpp11qpdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PDF Functions — cpp11qpdf","text":"","code":"# \\donttest{ # extract some pages pdf_file <- system.file(\"examples\", \"sufganiyot.pdf\", package = \"cpp11qpdf\") pdf_subset(pdf_file, 1, pdf_file, password = \"\") #> [1] \"/tmp/RtmpTCAzOz/temp_libpath786a543839273/cpp11qpdf/examples/sufganiyot.pdf\" pdf_length(pdf_file, password = \"\") #> [1] 1 # }"}]
