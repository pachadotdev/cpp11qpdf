// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// bindings.cpp
int cpp_pdf_length(char const* infile, const cpp11::strings& password);
extern "C" SEXP _cpp11qpdf_cpp_pdf_length(SEXP infile, SEXP password) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_pdf_length(cpp11::as_cpp<cpp11::decay_t<char const*>>(infile), cpp11::as_cpp<cpp11::decay_t<const cpp11::strings&>>(password)));
  END_CPP11
}
// bindings.cpp
cpp11::strings cpp_pdf_split(char const* infile, std::string outprefix, const cpp11::strings& password);
extern "C" SEXP _cpp11qpdf_cpp_pdf_split(SEXP infile, SEXP outprefix, SEXP password) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_pdf_split(cpp11::as_cpp<cpp11::decay_t<char const*>>(infile), cpp11::as_cpp<cpp11::decay_t<std::string>>(outprefix), cpp11::as_cpp<cpp11::decay_t<const cpp11::strings&>>(password)));
  END_CPP11
}
// bindings.cpp
cpp11::strings cpp_pdf_select(char const* infile, char const* outfile, cpp11::integers which, const cpp11::strings& password);
extern "C" SEXP _cpp11qpdf_cpp_pdf_select(SEXP infile, SEXP outfile, SEXP which, SEXP password) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_pdf_select(cpp11::as_cpp<cpp11::decay_t<char const*>>(infile), cpp11::as_cpp<cpp11::decay_t<char const*>>(outfile), cpp11::as_cpp<cpp11::decay_t<cpp11::integers>>(which), cpp11::as_cpp<cpp11::decay_t<const cpp11::strings&>>(password)));
  END_CPP11
}
// bindings.cpp
cpp11::strings cpp_pdf_combine(cpp11::strings infiles, char const* outfile, const cpp11::strings& password);
extern "C" SEXP _cpp11qpdf_cpp_pdf_combine(SEXP infiles, SEXP outfile, SEXP password) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_pdf_combine(cpp11::as_cpp<cpp11::decay_t<cpp11::strings>>(infiles), cpp11::as_cpp<cpp11::decay_t<char const*>>(outfile), cpp11::as_cpp<cpp11::decay_t<const cpp11::strings&>>(password)));
  END_CPP11
}
// bindings.cpp
cpp11::strings cpp_pdf_compress(char const* infile, char const* outfile, bool linearize, const cpp11::strings& password);
extern "C" SEXP _cpp11qpdf_cpp_pdf_compress(SEXP infile, SEXP outfile, SEXP linearize, SEXP password) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_pdf_compress(cpp11::as_cpp<cpp11::decay_t<char const*>>(infile), cpp11::as_cpp<cpp11::decay_t<char const*>>(outfile), cpp11::as_cpp<cpp11::decay_t<bool>>(linearize), cpp11::as_cpp<cpp11::decay_t<const cpp11::strings&>>(password)));
  END_CPP11
}
// bindings.cpp
cpp11::strings cpp_pdf_rotate_pages(char const* infile, char const* outfile, cpp11::integers which, int angle, bool relative, const cpp11::strings& password);
extern "C" SEXP _cpp11qpdf_cpp_pdf_rotate_pages(SEXP infile, SEXP outfile, SEXP which, SEXP angle, SEXP relative, SEXP password) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_pdf_rotate_pages(cpp11::as_cpp<cpp11::decay_t<char const*>>(infile), cpp11::as_cpp<cpp11::decay_t<char const*>>(outfile), cpp11::as_cpp<cpp11::decay_t<cpp11::integers>>(which), cpp11::as_cpp<cpp11::decay_t<int>>(angle), cpp11::as_cpp<cpp11::decay_t<bool>>(relative), cpp11::as_cpp<cpp11::decay_t<const cpp11::strings&>>(password)));
  END_CPP11
}
// bindings.cpp
cpp11::strings cpp_pdf_overlay(char const* infile, char const* stampfile, char const* outfile, const cpp11::strings& password);
extern "C" SEXP _cpp11qpdf_cpp_pdf_overlay(SEXP infile, SEXP stampfile, SEXP outfile, SEXP password) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_pdf_overlay(cpp11::as_cpp<cpp11::decay_t<char const*>>(infile), cpp11::as_cpp<cpp11::decay_t<char const*>>(stampfile), cpp11::as_cpp<cpp11::decay_t<char const*>>(outfile), cpp11::as_cpp<cpp11::decay_t<const cpp11::strings&>>(password)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_cpp11qpdf_cpp_pdf_combine",      (DL_FUNC) &_cpp11qpdf_cpp_pdf_combine,      3},
    {"_cpp11qpdf_cpp_pdf_compress",     (DL_FUNC) &_cpp11qpdf_cpp_pdf_compress,     4},
    {"_cpp11qpdf_cpp_pdf_length",       (DL_FUNC) &_cpp11qpdf_cpp_pdf_length,       2},
    {"_cpp11qpdf_cpp_pdf_overlay",      (DL_FUNC) &_cpp11qpdf_cpp_pdf_overlay,      4},
    {"_cpp11qpdf_cpp_pdf_rotate_pages", (DL_FUNC) &_cpp11qpdf_cpp_pdf_rotate_pages, 6},
    {"_cpp11qpdf_cpp_pdf_select",       (DL_FUNC) &_cpp11qpdf_cpp_pdf_select,       4},
    {"_cpp11qpdf_cpp_pdf_split",        (DL_FUNC) &_cpp11qpdf_cpp_pdf_split,        3},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_cpp11qpdf(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
